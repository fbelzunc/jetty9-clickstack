# -*-shell-script-*-

. "$plugin_dir/java/functions"

jetty_dir="$app_dir/jetty9"
jetty_conf_dir="$app_dir/jetty9/etc"
config="$control_dir/config"

create_app_skel() {
    echo "Creating application skeleton at $app_dir"
    chmod 750 "$app_dir"
    mkdir -m 750 "$app_dir/lib"
    mkdir -m 750 "$app_dir/conf"
    mkdir -m 770 "$app_dir/tmp"
    touch "$config"
    chmod 640 "$config"
}

install_jetty() {
    echo "Installing jetty"
    mkdir -m 750 "$jetty_dir"

    unzip -qd "$jetty_dir" "$plugin_dir/lib/jetty.zip"
    chmod -R g-w,o-rwx "$jetty_dir"

    echo "Installing external libraries"
    cp -a "$plugin_dir/lib" "$jetty_dir/"
}

install_jmx_invoker() {
   cp $plugin_dir/lib/cloudbees-jmx-invoker-jar-with-dependencies.jar $genapp_dir/lib/
   install -m 750 $plugin_dir/control/jmx_invoker $control_dir
}

install_mysql_connector_jar() {
    echo "Installing mysql-connector"
    _mysql_connector_jar_file="$plugin_dir/lib/mysql-connector-java.jar"
    _mysql_connector_jar_dest="$jetty_dir/lib/ext/"
    install -m 750 "$_mysql_connector_jar_file" "$_mysql_connector_jar_dest"
}

install_tomcat_jdbc_jar() {
    echo "tomcat-jdbc.jar"
    _tomcat_jdbc_jar_file="$plugin_dir/lib/tomcat-jdbc.jar"
    _tomcat_jdbc_jar_dest="$jetty_dir/lib/ext/"
    install -m 750 "$_tomcat_jdbc_jar_file" "$_tomcat_jdbc_jar_dest"
}
install_tomcat_juli_jar() {
    echo "tomcat-juli.jar"
    _tomcat_juli_jar_file="$plugin_dir/lib/tomcat-juli.jar"
    _tomcat_juli_jar_dest="$jetty_dir/lib/ext/"
    install -m 750 "$_tomcat_juli_jar_file" "$_tomcat_juli_jar_dest"
}

install_jmxtrans_agent() {
    # The jmxtrans agent takes care of metrics reporting 
    # which can be accessed with the control script stats-appstat
    echo "Installing jmxtrans agent"
    _agent_jar_file="$plugin_dir/lib/jmxtrans-agent.jar"
    _agent_jar_dest="$genapp_dir/lib/jmxtrans-agent.jar"
    _agent_opts_file="$control_dir/java-opts-60-jmxtrans-agent"
    _agent_config_file="$plugin_dir/conf/jetty9-metrics.xml"
    _agent_config_file_dest="$app_dir/conf/jetty9-metrics.xml"
    _agent_data_dest="$log_dir/jetty9-metrics.data"

    install -m 640 "$_agent_config_file" "$_agent_config_file_dest"
    install -m 750 "$_agent_jar_file" "$_agent_jar_dest"

    _java_opts="-javaagent:\"$_agent_jar_dest\"=\"$_agent_config_file_dest\""
    _java_opts+=" -Djetty9_metrics_data_file=\"$_agent_data_dest\""

    echo "$_java_opts" >> "$_agent_opts_file"
}

install_server_config() {
    echo "Installing server config"
    install -m 640 "$plugin_dir/server/conf/start.ini"* "$jetty_dir"
    install -m 640 "$plugin_dir/server/conf/app.xml"* "$jetty_dir/webapps"

    echo "Injecting metadata into app.xml"
    $(find_java) -jar "$plugin_dir/lib/genapp-setup-jetty9.jar"
}

install_app() {
    echo "Copying application files to $app_dir"
    cp -a $pkg_dir/* "$app_dir/jetty9/webapps/app.war"
    chmod -R g+w $app_dir
    
    #If there are packages on META-INF/lib/ then copy to jetty_dir/lib/ext folder
    lcount=$(unzip -l $app_dir/jetty9/webapps/app.war | grep META-INF/lib/ | wc -l)
    echo "Found $lcount files matching meta-inf/lib/"
    if [ "$lcount" -eq 0 ]; then
        echo "No lib provided under META-INF/lib."
    else
        unzip -jo "$app_dir/jetty9/webapps/app.war" "META-INF/lib/"* -d "$jetty_dir/lib/ext"
    fi 	
}


write_config() {
    echo "Writing configuration to $config"
    java="$(find_java)"
    echo "Using Java at $java"
    echo "app_dir=\"$app_dir\"" >> "$config"
    echo "port=$app_port" >> "$config"
    echo "java=\"$(find_java)\"" >> "$config"
    java_home="$(dirname $(dirname $java))"
    echo "Using JAVA_HOME at $java_home"
    echo "JAVA_HOME=\"$java_home\"" >> "$config"
    echo "genapp_dir=\"$genapp_dir\"" >> "$config"

    echo "jetty_opts=\"-Djetty.port=$app_port\"" >> "$config"
    echo "app_tmp=\"$app_dir/tmp\"" >> "$config"
    echo "log_dir=\"$log_dir\"" >> "$config"
    
    #Adding jetty_dir
    echo "jetty_dir=\"$jetty_dir\"" >> "$config"

}

write_control() {
    echo "Writing control scripts to $control_dir"
    install -m 550 $plugin_dir/control/start $control_dir
    echo "This is the end of write_control() function"
}
